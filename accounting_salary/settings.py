"""
Django settings for accounting_salary project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-gcto86fy&r9qnd_xedv(h!znmb@+@kb(k1gb79%z%k1@in$-gf"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["localhost", "127.0.0.1"]


# Application definition


INSTALLED_APPS = [
    # Default Django apps
    "django.contrib.admin",  # پنل ادمین
    "django.contrib.auth",  # سیستم احراز هویت (نیاز به تنظیم AUTH_USER_MODEL)
    "django.contrib.contenttypes",  # سیستم انواع محتوا (برای مجوزها و غیره)
    "django.contrib.sessions",  # مدیریت نشست‌ها
    "django.contrib.messages",  # سیستم پیام‌ها
    "django.contrib.staticfiles",  # مدیریت فایل‌های استاتیک
    "django_extensions",
    # Third-party apps (if any, add them here)
    # 'debug_toolbar', # مثال: اگر از Django Debug Toolbar استفاده می‌کنید
    # 'crispy_forms', # مثال: اگر از Django Crispy Forms استفاده می‌کنید
    # 'django_filters', # مثال: اگر از Django Filter استفاده می‌کنید
    # 'rest_framework', # مثال: اگر از Django REST Framework استفاده می‌کنید
    # Your custom apps
    # users باید قبل از هر اپی که به مدل کاربری سفارشی شما ارجاع می‌دهد قرار گیرد.
    "users",
    # organizations باید قبل از اپ‌هایی که به مدل Organization یا EmployeeOrganization ارجاع می‌دهند قرار گیرد.
    "organizations",
    # employees باید قبل از اپ‌هایی که به مدل Employee یا BankAccount ارجاع می‌دهند قرار گیرد.
    # organizations به employees وابسته است (از طریق EmployeeOrganization)، اما در لیست بالا organizations قبل از employees آمده است
    # چون EmployeeOrganization در organizations تعریف شده و به Employee در employees ارجاع می‌دهد.
    # این ترتیب معمولا مشکلی ایجاد نمی‌کند چون Django وابستگی‌های مدل‌ها را در زمان بارگذاری اولیه مدیریت می‌کند.
    # اما اگر وابستگی‌های پیچیده‌تری دارید، ممکن است نیاز به تنظیمات دقیق‌تر باشد.
    "employees",
    # settings_app وابسته به organizations است (از طریق FiscalYear -> Organization)
    "settings_app",
    # hr وابسته به organizations و employees و settings_app است.
    "hr",
    # loans وابسته به organizations و employees است.
    "loans",
    # salaries وابسته به organizations، employees و settings_app است.
    "salaries",
    # Add other custom apps here as needed...
]

# سایر تنظیمات settings.py ...

# تنظیم مدل کاربری سفارشی (اگر از CustomUser در users.models استفاده می‌کنید)
# این خط باید وجود داشته باشد و به مدل کاربری سفارشی شما اشاره کند.
AUTH_USER_MODEL = "users.CustomUser"

# تنظیمات مربوط به فایل‌های مدیا (اگر در settings.py شما نیست)
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"  # یا os.path.join(BASE_DIR, 'media')


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "accounting_salary.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "accounting_salary.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
